{"version":3,"sources":["config.js","graphics.js","periods.js","Table.js","Temp.js","App.js","serviceWorker.js","index.js"],"names":["GARAAÅ½_ON","VALJAS_ON","EESRUUM_ON","LEILIRUUM_ON","Graphics","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_leftClickHandler","tempVariable","Date","state","limit","page","nextLeft","Math","abs","mintemp","setState","disableLeft","_rightClickHandler","updateDimensions","bind","assertThisInitialized","temperatures","viewportwith","window","innerWidth","that","fetch","server","then","response","json","data","tempPoints","tempValjas","tempEesruum","tempLeiliruum","map","temp","tempObject","x","TimeStamp","getTime","y","Temp_garaaz","push","Temp_valjas","Temp_Leiliruum","Temp_Eesruum","timevariable","min","apply","garaaz","valjas","eesruum","leiliruum","Limit","console","log","addEventListener","fetchData","prevProps","prevState","snapshot","removeEventListener","tyhi","props","rightpagination","react_default","a","createElement","ButtonToolbar_default","className","Button_default","size","disabled","variant","onClick","es","height","margin","top","bottom","title","tickFormat","v","concat","toLocaleDateString","month","day","hour","minute","tickLabelAngle","color","Component","qualityType","Garaaz","Test","Eesruum","periodFormatter","cell","row","timeConversion","dateFormatter","parseInt","DataTable","addTableData","tableData","total","i","tableDataLen","periods","length","undefined","filterValue","period","room","sortName","sortOrder","footerData","label","columnIndex","align","formatter","onSortChange","onFilterChange","filterObj","value","Room","start","Start","Period","end","End","fetchPeriod","options","noDataText","defaultSortName","defaultSortOrder","react_bootstrap_table_lib","footer","pagination","dataField","dataSort","formatExtraData","filter","type","condition","defaultValue","isKey","dataFormat","Table","style","fontSize","Table_TableRow","onLegendClick","TableRow","appProps","_onClick","e","returnValue","target","innerText","styleFunction","styleConst","cursor","roomId","opacity","key","Id","heat","calcHeatPeriod","Fragment","Temp","realtimeURL","eventSource","EventSource","roomTemp","_this2","onmessage","updateTempState","JSON","parse","tempState","tempArray","numerator","mapProperty","HeatStart","HeatEnd","Table_Table","property","ruum","App","App_MainPage","MainPage","_legendClickHandler","input","_clickHandler","item","newState","assign","items","Tempcomponent","GetBrowser","Temp_Temp","Container_default","Row","Col","sm","App_ServerTime","App_ControlledTabs","ControlledTabs","context","handleSelect","Tabs","activeKey","onSelect","id","Tab","eventKey","graphics","periods_DataTable","React","ServerTime","_this3","serveruptime","nodeuptime","node","App_Clock","Clock","_this4","time","stime","_this5","intervalID","setInterval","tick","clearInterval","millisec","seconds","toFixed","minutes","hours","days","navigator","userAgent","indexOf","appVersion","document","documentMode","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d43aa9a.chunk.js","sourcesContent":["export const GARAAÅ½_ON = \"skyblue\";\r\nexport const VALJAS_ON = \"sandybrown\";\r\nexport const EESRUUM_ON = \"navy\";\r\nexport const LEILIRUUM_ON = \"darkcyan\";","import React, { Component } from 'react';\r\nimport { FlexibleWidthXYPlot, LineSeries, \r\n    VerticalGridLines, HorizontalGridLines,\r\n    XAxis,\r\n    YAxis\r\n\r\n  } from 'react-vis';\r\n  //import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n  //import '../node_modules/react-vis/dist/style.css';\r\n  import { server } from './App';\r\n  import Button \r\n      from 'react-bootstrap/Button';\r\n  import  ButtonToolbar\r\n   from 'react-bootstrap/ButtonToolbar';\r\nimport { GARAAÅ½_ON, LEILIRUUM_ON, EESRUUM_ON, VALJAS_ON } from './config';\r\n//import { timeConversion } from './App';\r\n\r\n//import '../node_modules/react-vis/dist/style.css';\r\n\r\n\r\nclass Graphics extends Component {\r\n    constructor() {\r\n      super();\r\n      this.updateDimensions = this.updateDimensions.bind(this);\r\n      this._leftClickHandler = this._leftClickHandler.bind(this);\r\n      this.state = {\r\n\r\n        temperatures: [],\r\n        viewportwith: window.innerWidth,\r\n        limit: 100,\r\n        page: 0\r\n      }\r\n    }\r\n  \r\n    fetchData () {\r\n      var that = this;\r\n      const page = this.state.page;\r\n      const limit = this.state.limit;\r\n      //console.log('Limit before fetch',limit);\r\n      fetch(server+'/temps/search?limit='+limit+'&page='+page)\r\n      .then((response) => {\r\n        response.json()\r\n          .then((data) => {\r\n            that.setState(() => {\r\n              //console.log(data);\r\n              const temperatures = data;\r\n              let tempPoints = [];\r\n              let tempValjas = [];\r\n              let tempEesruum = [];\r\n              let tempLeiliruum = [];\r\n              let mintemp = [];\r\n              /* temperatures.map(temp => { var garaaz = [];\r\n                 garaaz.push(new Date(temp.TimeStamp), temp.Temp_garaaz);\r\n                return tempPoints.push(garaaz);\r\n               });*/\r\n              //create data for graphics\r\n              temperatures.map(temp => {\r\n                let tempObject = {};\r\n                tempObject.x = (new Date(temp.TimeStamp)).getTime();\r\n                tempObject.y = temp.Temp_garaaz;\r\n                return tempPoints.push(tempObject);\r\n              });\r\n              temperatures.map(temp => {\r\n                let tempObject = {};\r\n                tempObject.x = (new Date(temp.TimeStamp)).getTime();\r\n                tempObject.y = temp.Temp_valjas;\r\n                return tempValjas.push(tempObject);\r\n              });\r\n              temperatures.map(temp => {\r\n                let tempObject = {};\r\n                tempObject.x = (new Date(temp.TimeStamp)).getTime();\r\n                tempObject.y = temp.Temp_Leiliruum;\r\n                return tempLeiliruum.push(tempObject);\r\n              });\r\n              temperatures.map(temp => {\r\n                let tempObject = {};\r\n                tempObject.x = (new Date(temp.TimeStamp)).getTime();\r\n                tempObject.y = temp.Temp_Eesruum;\r\n                return tempEesruum.push(tempObject);\r\n              });\r\n              temperatures.map(temp => {\r\n                var timevariable = new Date(temp.TimeStamp).getTime();\r\n                return mintemp.push(timevariable);\r\n\r\n              })\r\n              var min = Math.min(...mintemp);\r\n              //console.log('MIN temp', min);\r\n              return {\r\n                temperatures: data,\r\n                garaaz: tempPoints,\r\n                valjas: tempValjas,\r\n                eesruum: tempEesruum,\r\n                leiliruum: tempLeiliruum,\r\n                mintemp: min\r\n              };\r\n            });\r\n  \r\n  \r\n  \r\n          })\r\n      })\r\n  \r\n    }\r\n    _leftClickHandler = () => {\r\n\r\n      const tempVariable = new Date() - (1000*60*60*24)*this.state.limit - this.state.page*this.state.limit*(1000*60*60*24);\r\n      \r\n      const nextLeft = Math.abs(this.state.mintemp - tempVariable)/(1000*60*60*24) < 1 ? true : false;\r\n      //console.log('BEFORE', Math.abs(this.state.mintemp - tempVariable)/(1000*60*60*24), nextLeft, tempVariable);\r\n\r\n      this.setState({\r\n        page: nextLeft ? this.state.page + 1 : this.state.page,\r\n        disableLeft: nextLeft ? false : true\r\n \r\n      });\r\n    }\r\n    _rightClickHandler = () => {\r\n      //console.log('BEFORE Right', this.state.page, this.state.valjas.length);\r\n      this.setState({\r\n        page: this.state.page === 0 ? this.state.page : this.state.page - 1\r\n      });\r\n    }\r\n    updateDimensions () {\r\n      const Limit = window.innerWidth < 800? 10 : 100;\r\n      this.setState({viewportwith: window.innerWidth,\r\n        limit: Limit\r\n      });\r\n      //console.log(this.state.limit);\r\n    }\r\n    componentWillMount () {\r\n      this.updateDimensions();\r\n    }\r\n    //AJAX calls\r\n    componentDidMount() {\r\n      console.log('COMPONENT HAS MOUNTED');\r\n      window.addEventListener('resize', this.updateDimensions);\r\n      this.fetchData();\r\n\r\n            \r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if(this.state.limit !== prevState.limit || this.state.page !== prevState.page) {\r\n        this.fetchData();\r\n      }\r\n    }\r\n    componentWillUnmount() {\r\n      window.removeEventListener('resize', this.updateDimensions);\r\n    }\r\n    render() {\r\n      //console.log(this.props.garaaz);\r\n      //this.props indicates legend click state\r\n      const tyhi = [];\r\n      const data = (this.props.garaaz)?this.state.garaaz:tyhi;\r\n      const valjas = (this.props.valjas)?this.state.valjas:tyhi;\r\n      const eesruum = (this.props.eesruum)?this.state.eesruum:tyhi;\r\n      const leiliruum = (this.props.leiliruum)?this.state.leiliruum:tyhi;\r\n      const rightpagination = this.state.page === 0 ? true: false;\r\n\r\n\r\n      return (\r\n  <div>\r\n        <ButtonToolbar className='justify-content-between'>\r\n          <Button size='sm' disabled={this.state.nextLeft} variant='outline-primary' onClick={this._leftClickHandler} >\r\n            &larr; Previous Page\r\n          </Button>\r\n          \r\n            <Button size='sm' disabled={rightpagination} variant='outline-primary' onClick={this._rightClickHandler} >\r\n              Next Page &rarr;\r\n            </Button>\r\n          \r\n       </ButtonToolbar>\r\n        <FlexibleWidthXYPlot height={400}  margin={{ top: 10, bottom: 80}}>\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis title=\"Aeg\" tickFormat={v => `${new Date(v).toLocaleDateString('et',{\"month\":\"2-digit\",\"day\":\"2-digit\",\"hour\":\"2-digit\",\"minute\":\"2-digit\"})}`} tickLabelAngle={-45}/>\r\n        <YAxis title=\"Temp\" />\r\n\r\n        <LineSeries data={data} color={GARAAÅ½_ON} />\r\n\r\n        <LineSeries data={leiliruum } color={LEILIRUUM_ON}/>\r\n        \r\n        <LineSeries data={eesruum} color={EESRUUM_ON}/>\r\n\r\n        <LineSeries data={valjas} color={VALJAS_ON}/>\r\n\r\n\r\n        </FlexibleWidthXYPlot>\r\n\r\n  </div>\r\n\r\n\r\n\r\n       );\r\n    }\r\n  }\r\n\r\nexport default Graphics;\r\n  ","import React, { Component } from 'react';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport '../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport { timeConversion, server } from './App';\r\n\r\n/*var products = \r\n[{\r\n    room: \"Garaaz\",\r\n    start: 1,\r\n    period: 120,\r\n    end: 9\r\n}, {\r\n    room: \"Garaaz\",\r\n    start: 11,\r\n    period: 80,\r\n    end: 91\r\n}];*/\r\n/*const footerData = [[\r\n    {\r\n        label: '',\r\n        columnIndex: 0\r\n    },\r\n    {\r\n        label: 'Total $100',\r\n        columnIndex: 2,\r\n        align: 'right'\r\n    },\r\n    {\r\n        label: 'Total $250',\r\n        columnIndex: 3,\r\n        align: 'right'\r\n    },\r\n]]*/\r\nconst qualityType = {\r\n    Garaaz: 'Garaaz',\r\n    Test: 'Test',\r\n    Eesruum: 'Eesruum'\r\n  };\r\n//const server = 'http://kilde27.hopto.org:4000';\r\nfunction periodFormatter(cell, row) {\r\n    return timeConversion(cell);\r\n}\r\nfunction dateFormatter(cell, row) {\r\n    return new Date(parseInt(cell))\r\n    .toLocaleDateString('et',{\"month\":\"2-digit\",\"day\":\"2-digit\",\"hour\":\"2-digit\",\"minute\":\"2-digit\"});\r\n}\r\nexport default class DataTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n  \r\n          periods: [],\r\n          sortName: undefined,\r\n          sortOrder: undefined,\r\n          filterValue: undefined,\r\n          total: 0,\r\n          footerData: [[\r\n            {\r\n                label: '',\r\n                columnIndex: 0\r\n            },\r\n            {\r\n                label: 'Total Value',\r\n                columnIndex: 2,\r\n                align: 'right',\r\n                formatter: tableData => this.addTableData(tableData)\r\n            }\r\n\r\n        ]]\r\n        }\r\n        this.onSortChange = this.onSortChange.bind(this);\r\n        this.onFilterChange = this.onFilterChange.bind(this);\r\n      }\r\n    onSortChange(sortName, sortOrder) {\r\n    //console.info('onSortChange', arguments);\r\n    this.setState({\r\n        sortName,\r\n        sortOrder\r\n    });\r\n    }\r\n    onFilterChange(filterObj) {\r\n        //console.log(filterObj.room);\r\n        if (filterObj.room === undefined) {\r\n            this.setState({\r\n                filterValue: undefined\r\n            });\r\n        } else {\r\n            this.setState({\r\n                filterValue: filterObj.room.value\r\n            });\r\n        }\r\n\r\n\r\n        //let result = this.state.footerData[0].findIndex(element => {return element.columnIndex === 2});\r\n        //this.setState({footerData[0][result].label : 'Uus Label'});\r\n        //console.log(this.state);\r\n        return;\r\n    }\r\n    \r\n    addTableData = (tableData) => {\r\n        //this.setState({total: 0});\r\n        let total = 0;\r\n        tableData = this.state.periods;\r\n        //console.log(tableData);\r\n\r\n            for (let i = 0, tableDataLen = tableData.length; i < tableDataLen; i++) {\r\n                if(this.state.filterValue === undefined) {\r\n                    total += tableData[i].period;\r\n                }  else if(this.state.filterValue === tableData[i].room )  {     \r\n                    total += tableData[i].period;\r\n                } \r\n\r\n            \r\n        }\r\n\r\n        return (\r\n            <strong>Total: {timeConversion(total)}</strong>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    fetchPeriod() {\r\n        const that = this;\r\n        fetch(server+'/period/search?limit=1000&page=0')\r\n        .then((response) => {\r\n          response.json()\r\n          .then((data) => {\r\n            //console.log(timeConversion(data[0].Period));\r\n            that.setState(() => {\r\n                //const periods = data;\r\n                //console.log(typeof periods);\r\n                const periods = data.map(period => {\r\n                    return {room: period.Room,\r\n                    start: period.Start,\r\n                    period: period.Period,\r\n                    end: period.End\r\n                    };\r\n                });\r\n            //console.log(periods);\r\n            return {periods: periods}\r\n            });\r\n\r\n          })\r\n          })\r\n      }\r\n    componentDidMount() {\r\n        this.fetchPeriod();\r\n        //console.log(data);\r\n    }\r\n    render() {\r\n        const options = {\r\n            sortName: this.state.sortName,\r\n            sortOrder: this.state.sortOrder,\r\n            onSortChange: this.onSortChange,\r\n            onFilterChange: this.onFilterChange,\r\n            noDataText: 'Data query result was empty',\r\n            defaultSortName: 'start',\r\n            defaultSortOrder: 'desc'\r\n          };\r\n        const { footerData } = this.state;\r\n      return (\r\n        <BootstrapTable data={ this.state.periods } \r\n        options={ options }\r\n        footerData={ footerData }\r\n        footer\r\n        pagination\r\n        >\r\n            <TableHeaderColumn dataField='room' dataSort \r\n            formatExtraData={ qualityType } \r\n            filter={ { type: 'SelectFilter', options: qualityType, condition: 'eq', defaultValue: 'Garaaz' }}\r\n             >Room</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='start' \r\n            isKey={ true } dataSort dataFormat={dateFormatter} >Start</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='period' dataSort dataFormat={periodFormatter}  >Period</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='end' dataSort dataFormat={dateFormatter}>End</TableHeaderColumn>\r\n        </BootstrapTable>\r\n      );\r\n    }\r\n  }","import React, { Component } from 'react';\r\nimport { timeConversion } from './App';\r\nimport { GARAAÅ½_ON, EESRUUM_ON, LEILIRUUM_ON, VALJAS_ON } from './config';\r\n\r\n\r\nexport const Table = (props) => {\r\n    // style={{'marginLeft':'auto','marginRight':'auto'}}\r\n    //console.log(props.data);\r\n  \r\n        return ( \r\n          <table  className={'table table-condensed'} style={{fontSize: '12px'}} >\r\n            <tbody>\r\n            <TableRow data={props.data} onLegendClick={props.onLegendClick}/>\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n   \r\n \r\nconst TableRow = (props) => {\r\n\r\n    const { data } = props;\r\n    //console.log(data.appProps);\r\n    const leiliruum = data.appProps.leiliruum;\r\n    const eesruum = data.appProps.eesruum;\r\n    const valjas = data.appProps.valjas;\r\n    const garaaz = data.appProps.garaaz;\r\n    function _onClick (e) {\r\n        //console.log(e.target.innerText);\r\n        const returnValue = {};\r\n        returnValue.title = e.target.innerText;\r\n\r\n        props.onLegendClick(returnValue);\r\n    }\r\n\r\n\r\n\r\n\r\nfunction styleFunction (data) {\r\n    let styleConst = {\r\n        cursor: \"pointer\",\r\n        color:  \"blue\",  \r\n        \r\n    };\r\n\r\n    if (data.roomId === 'GaraaÅ¾' ) {\r\n        styleConst.color = GARAAÅ½_ON;\r\n        if (garaaz) styleConst.opacity = 1; else styleConst.opacity = 0.5;\r\n\r\n    } else if (data.roomId === 'Eesruum') {\r\n        styleConst.color = EESRUUM_ON;\r\n        if (eesruum) styleConst.opacity = 1; else styleConst.opacity = 0.5;\r\n    } else if (data.roomId === 'Leiliruum') {\r\n        styleConst.color = LEILIRUUM_ON;\r\n        if (leiliruum) styleConst.opacity = 1; else styleConst.opacity = 0.5;\r\n    } else if (data.roomId === 'Ãues') {\r\n        styleConst.color = VALJAS_ON;\r\n        if (valjas) styleConst.opacity = 1; else styleConst.opacity = 0.5;\r\n    } else {\r\n        styleConst.color = \"black\";\r\n    }\r\n   // console.log(data);\r\n    return styleConst;\r\n}\r\n\r\n\r\n\r\n    const row = data.map((data) =>\r\n  \r\n    <tr  key={data.Id}>\r\n        <td \r\n            className='text-right font-weight-bold'\r\n            style={styleFunction(data)}\r\n\r\n            key={data.roomId} \r\n            onClick={_onClick}\r\n            >{data.roomId}\r\n        </td>\r\n      <td key={data.temp}>{data.temp} &#176;C</td>\r\n      <td >{(data.roomId === 'GaraaÅ¾' || \r\n        data.roomId === 'Eesruum' || \r\n        data.roomId === 'Test')?\r\n        data.heat? 'Heater On:' : 'LHP:' : ''} \r\n      </td>\r\n      <td>{(data.roomId === 'GaraaÅ¾' || \r\n        data.roomId === 'Eesruum' || \r\n        data.roomId === 'Test') ?\r\n        data.heat ? timeConversion(new Date().getTime() - \r\n        data.start) : data.start ? calcHeatPeriod(data)+' /' +\r\n        timeConversion(new Date().getTime() - data.end)+' Ago' : 'N/A' : ''} \r\n      </td>\r\n    </tr>\r\n    );\r\n    return (\r\n      <>{row}</>\r\n    );\r\n  }\r\n\r\n\r\nfunction calcHeatPeriod(data) {\r\n  //console.log(data);\r\n  if(data.end - data.start > 0) {\r\n    return timeConversion(data.end - data.start);\r\n  } else {\r\n    return '';\r\n  }\r\n} ","import React, { Component } from 'react';\r\nimport { Table } from './Table';\r\nimport { server } from './App';\r\n\r\nexport default class Temp extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let realtimeURL = server+'/sse';\r\n       this.eventSource = new EventSource(realtimeURL);\r\n  \r\n       this.state = {\r\n          roomTemp: []\r\n       };\r\n    }\r\n    componentDidMount() {\r\n      this.eventSource.onmessage = e => {\r\n        this.updateTempState(JSON.parse(e.data));\r\n        //console.log(e.data);\r\n      }\r\n  \r\n    }\r\n  \r\n    updateTempState(tempState) {\r\n  \r\n      let tempArray = [];\r\n      let tempObject = {};\r\n      let numerator = 0;\r\n      //console.log((tempState['28-000007d4684f'].TestHeatEnd - tempState['28-000007d4684f'].TestHeatStart));\r\n      for(let i in tempState) {\r\n        tempObject = {\r\n            roomId: mapProperty(i), \r\n            temp: tempState[i].temp, \r\n            heat: tempState[i].heat, \r\n            Id: numerator, \r\n            start: tempState[i].HeatStart, \r\n            end: tempState[i].HeatEnd\r\n        }\r\n        ++numerator;\r\n        //console.log(tempState[i]);\r\n        tempArray.push(tempObject);\r\n      }\r\n  \r\n      this.setState({roomTemp: tempArray});\r\n    }\r\n  \r\n  \r\n    render () {\r\n      let tempObject = this.state.roomTemp;\r\n      tempObject.appProps=this.props.appProps;\r\n     // console.log('TEMPPROPS', this.props);\r\n  \r\n      //console.log(tempObject);\r\n  /*style={{'marginLeft':'auto','marginRight':'auto'}}*/ \r\n      return (\r\n        <div>\r\n          <Table data={tempObject} onLegendClick={this.props.onLegendClick}/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  function mapProperty(property) {\r\n    var ruum = '';\r\n    switch(property) {\r\n      case '28-0517c3a351ff':\r\n            ruum = 'GaraaÅ¾';\r\n            break;\r\n      case '28-0417c2a85dff':\r\n          ruum = 'Eesruum';\r\n            break;\r\n      case '28-0417c28ee3ff':\r\n          ruum = 'Ãues';\r\n            break;\r\n      case '28-0417c2da95ff':\r\n          ruum = 'Leiliruum';\r\n        break;\r\n      case '28-000007d4684f':\r\n          ruum = 'Test';\r\n            break;\r\n      default:\r\n        break;\r\n  \r\n    }\r\n    return ruum;\r\n  }","import React, { Component } from 'react';\n//import * as moment from 'moment';\n//import logo from './logo.svg';\nimport './App.css';\n//import './bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport '../node_modules/react-vis/dist/style.css';\nimport { \n        Row,\n        Col,\n        Tabs,\n      Tab } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\n\nimport Graphics from './graphics';\n//import LegendExample from './legendclick';\nimport DataTable from './periods';\n//import { Table } from './Table';\nimport  Temp  from './Temp';\n\nexport const server = 'http://kilde27.hopto.org:4000';\n\nclass App extends Component {\n\n  render() {\n     return (\n      <MainPage/>\n    );\n  }\n}\nclass MainPage extends Component { \n  constructor(props) {\n    super(props);\n    this._clickHandler = this._clickHandler.bind(this);\n    \n    this._legendClickHandler = this._legendClickHandler.bind(this);\n\n    this.state = {\n      title: 'Kilde 27 Garage Temperatures',\n      temperatures: [],\n      leiliruum: true,\n      eesruum: true,\n      valjas: true,\n      garaaz: true,\n      items: [\n        {title:'GaraaÅ¾', disabled: false},\n        {title:'Eesruum', disabled: false},\n        {title:'Ãues', disabled: false},\n        {title: 'Leiliruum', disabled: false},\n      ]\n    }\n  }\n  _legendClickHandler = (input) => {\n    //console.log('INPUT', input);\n  };\n\n  _clickHandler =  (item) => {\n\n    //console.log('CLICK', item);\n\n    //const {items} = this.state.items;\n    //let { leiliruum, eesruum, valjas, garaaz } = this.state;\n    let newState = Object.assign({}, this.state);\n\n    //item.disabled = !item.disabled;\n    if(item.title ==='GaraaÅ¾') {\n      newState.garaaz = !newState.garaaz; \n\n      newState.items[0].disabled = !newState.items[0].disabled;\n     //console.log(newState.items[0]);\n    }\n    else if (item.title ==='Eesruum') {\n      newState.eesruum = !newState.eesruum;\n      newState.items[1].disabled = !newState.items[1].disabled;\n    }\n    else if (item.title ==='Ãues') {\n      newState.valjas = !newState.valjas;\n      newState.items[2].disabled = !newState.items[2].disabled;\n    }\n    else if (item.title ==='Leiliruum') {\n      newState.leiliruum= !newState.leiliruum;\n      newState.items[3].disabled = !newState.items[3].disabled;\n    }\n\n    \n    //console.log('newState', newState);\n\n    this.setState(newState);\n\n\n\n    //this.setState({items, leiliruum, eesruum, garaaz, valjas});\n    //console.log(item);\n  };\n  \n\n\n  render() {\n    let title = this.state.title;\n    let message = 'IE and Edge don\\'t support SSE. Use other browsers like Chrome to monitor online temperatures'; \n    const Tempcomponent = GetBrowser() !== 'Edge' && \n    GetBrowser() !== 'IE' ? <Temp onLegendClick={this._clickHandler} appProps={this.state}/> : <span>{message}</span>;\n    //let viewportwidth = window.innerWidth;\n    //let viewportheight = window.innerHeight;\n    //let temperatures = this.state.temperatures;\n    //console.log(this.state.items);\n    return (\n      <Container className=\"App\"> \n        <Row  className=\"App-header\">\n          <Col  sm={2} >\n          <span style={{fontSize: '10px'}}>{GetBrowser()}</span>\n          </Col>\n          <Col sm >\n          <h6>{title}</h6>\n          </Col>\n          <Col sm={3} >\n            <>\n              <ServerTime />\n            </>\n          </Col>\n        </Row>   \n        <Row >\n          <Col sm={9} >\n              {Tempcomponent}\n          </Col>\n          <Col >\n\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ControlledTabs \n              leiliruum={this.state.leiliruum}\n              eesruum={this.state.eesruum}\n              valjas={this.state.valjas}\n              garaaz={this.state.garaaz}\n            />          \n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nclass ControlledTabs extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleSelect = this.handleSelect.bind(this);\n\n    this.state = {\n      key: 1\n    };\n  }\n\n  handleSelect(key) {\n    //alert(`selected ${key}`);\n    this.setState({ key });\n  }\n\n  render() {\n    const leiliruum = this.props.leiliruum;\n    const eesruum = this.props.eesruum;\n    const valjas = this.props.valjas;\n    const garaaz = this.props.garaaz;\n    //console.log(garaaz);\n    return (\n      <Tabs\n        activeKey={this.state.key}\n        onSelect={this.handleSelect}\n        id=\"temptab\"\n      >\n        <Tab eventKey={1} title=\"Temps\">\n          <Row>\n            <Col>\n            <Graphics leiliruum={leiliruum}\n                    eesruum={eesruum}\n                    valjas={valjas}\n                    garaaz={garaaz}\n            />\n            </Col>\n          </Row>\n        </Tab>\n        <Tab eventKey={2} title=\"Heatings\">\n          <DataTable />\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n\n\nfunction calcHeatPeriod(data) {\n  //console.log(data);\n  if(data.end - data.start > 0) {\n    return timeConversion(data.end - data.start);\n  } else {\n    return '';\n  }\n}\nclass ServerTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n     this.state = {\n        serveruptime: ''\n     };\n  }\n\n  //AJAX calls\n  componentDidMount() {\n    //console.log('SERVERUPTIME HAS MOUNTED');\n\n\n      var that = this;\n      let realtimeURL = server+'/sst';\n      fetch(realtimeURL)\n      .then((response) => {\n        response.json()\n          .then((data) => {\n            that.setState(() => {\n              //console.log(new Date(data.node));\n              return {\n                serveruptime: data.server,\n                nodeuptime: data.node\n              };\n            });\n  \n  \n  \n          })\n      })\n  \n  }\n  render() {\n    //console.log(moment(this.state.serveruptime));\n    return (\n      <>\n        <Clock data={this.state} />\n      </>\n    );\n  }\n}\n\nclass Clock extends React.Component {\n  //const data = this.props.data;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      time: timeConversion((new Date()).getTime() - (new Date(this.props.data.nodeuptime)).getTime()),\n      stime: timeConversion((new Date()).getTime() - (new Date(this.props.data.serveruptime)).getTime())\n    };\n  }\n  componentDidMount() {\n    this.intervalID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n  tick() {\n    this.setState({\n      time: timeConversion((new Date()).getTime() - (new Date(this.props.data.nodeuptime)).getTime()),\n      stime: timeConversion((new Date()).getTime() - (new Date(this.props.data.serveruptime)).getTime())\n    });\n  }\n  render() {\n\n    return (\n      <table className='table table_condensed' style={{fontSize: '10px', color: 'white'}}>\n        <tbody>\n          <tr>\n            <td className='text-right'>\n              Node UpTime:\n            </td>\n            <td>\n              {this.state.time}\n            </td>\n            <td className='text-right'>\n              Server UpTime:\n            </td>\n            <td>\n              {this.state.stime}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n\nfunction timeConversion(millisec) {\n\n  var seconds = (millisec / 1000).toFixed(1);\n\n  var minutes = (millisec / (1000 * 60)).toFixed(1);\n\n  var hours = (millisec / (1000 * 60 * 60)).toFixed(1);\n\n  var days = (millisec / (1000 * 60 * 60 * 24)).toFixed(1);\n\n  if (seconds < 60) {\n      return seconds + \" Sec\";\n  } else if (minutes < 60) {\n      return minutes + \" Min\";\n  } else if (hours < 24) {\n      return hours + \" Hrs\";\n  } else {\n      return days + \" Days\"\n  }\n}\nexport { timeConversion };\nfunction GetBrowser()\n{\n  if ( navigator.userAgent.indexOf(\"Edge\") > -1 && navigator.appVersion.indexOf('Edge') > -1 ) {\n    return 'Edge';\n}\nelse if( navigator.userAgent.indexOf(\"Opera\") !== -1 || navigator.userAgent.indexOf('OPR') !== -1 )\n{\n    return 'Opera';\n}\nelse if( navigator.userAgent.indexOf(\"Chrome\") !== -1 )\n{\n    return 'Chrome';\n}\nelse if( navigator.userAgent.indexOf(\"Safari\") !== -1)\n{\n    return 'Safari';\n}\nelse if( navigator.userAgent.indexOf(\"Firefox\") !== -1 ) \n{\n    return 'Firefox';\n}\nelse if( ( navigator.userAgent.indexOf(\"MSIE\") !== -1 ) || (!!document.documentMode === true ) ) //IF IE > 10\n{\n    return 'IE';\n}  \nelse \n{\n    return 'unknown';\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"@babel/polyfill\";\nimport \"react-app-polyfill/ie11\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}